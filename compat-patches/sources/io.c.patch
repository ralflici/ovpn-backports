diff --git a/drivers/net/ovpn/io.c b/drivers/net/ovpn/io.c
index ebf1e84..76bf87f 100644
--- a/drivers/net/ovpn/io.c
+++ b/drivers/net/ovpn/io.c
@@ -87,7 +87,11 @@ static void ovpn_netdev_write(struct ovpn_peer *peer, struct sk_buff *skb)
 	if (likely(ret == NET_RX_SUCCESS)) {
 		/* update RX stats with the size of decrypted packet */
 		ovpn_peer_stats_increment_rx(&peer->vpn_stats, pkt_len);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 14, 0)
 		dev_dstats_rx_add(peer->ovpn->dev, pkt_len);
+#else
+		dev_sw_netstats_rx_add(peer->ovpn->dev, pkt_len);
+#endif
 	}
 }
 
@@ -189,7 +193,11 @@ void ovpn_decrypt_post(void *data, int ret)
 	skb = NULL;
 drop:
 	if (unlikely(skb))
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 14, 0)
 		dev_dstats_rx_dropped(peer->ovpn->dev);
+#else
+		dev_core_stats_rx_dropped_inc(peer->ovpn->dev);
+#endif
 	kfree_skb(skb);
 drop_nocount:
 	if (likely(peer))
@@ -213,7 +221,11 @@ void ovpn_recv(struct ovpn_peer *peer, struct sk_buff *skb)
 		net_info_ratelimited("%s: no available key for peer %u, key-id: %u\n",
 				     netdev_name(peer->ovpn->dev), peer->id,
 				     key_id);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 14, 0)
 		dev_dstats_rx_dropped(peer->ovpn->dev);
+#else
+		dev_core_stats_rx_dropped_inc(peer->ovpn->dev);
+#endif
 		kfree_skb(skb);
 		ovpn_peer_put(peer);
 		return;
@@ -291,7 +303,11 @@ void ovpn_encrypt_post(void *data, int ret)
 	rcu_read_unlock();
 err:
 	if (unlikely(skb))
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 14, 0)
 		dev_dstats_tx_dropped(peer->ovpn->dev);
+#else
+		dev_core_stats_tx_dropped_inc(peer->ovpn->dev);
+#endif
 	if (likely(peer))
 		ovpn_peer_put(peer);
 	if (likely(ks))
@@ -333,7 +349,11 @@ static void ovpn_send(struct ovpn_priv *ovpn, struct sk_buff *skb,
 	 */
 	skb_list_walk_safe(skb, curr, next) {
 		if (unlikely(!ovpn_encrypt_one(peer, curr))) {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 14, 0)
 			dev_dstats_tx_dropped(ovpn->dev);
+#else
+			dev_core_stats_tx_dropped_inc(ovpn->dev);
+#endif
 			kfree_skb(curr);
 		}
 	}
@@ -383,7 +403,11 @@ netdev_tx_t ovpn_net_xmit(struct sk_buff *skb, struct net_device *dev)
 		if (unlikely(!curr)) {
 			net_err_ratelimited("%s: skb_share_check failed for payload packet\n",
 					    netdev_name(dev));
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 14, 0)
 			dev_dstats_tx_dropped(ovpn->dev);
+#else
+			dev_core_stats_tx_dropped_inc(ovpn->dev);
+#endif
 			continue;
 		}
 
@@ -417,7 +441,11 @@ netdev_tx_t ovpn_net_xmit(struct sk_buff *skb, struct net_device *dev)
 	return NETDEV_TX_OK;
 
 drop:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 14, 0)
 	dev_dstats_tx_dropped(ovpn->dev);
+#else
+	dev_core_stats_tx_dropped_inc(ovpn->dev);
+#endif
 	skb_tx_error(skb);
 	kfree_skb_list(skb);
 	return NETDEV_TX_OK;
