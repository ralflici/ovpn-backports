# This GitHub Actions workflow is designed to automate the process of updating
# OVPN sources in the "sources" branch whenever there are changes pushed to the
# "main" branch. Files under drivers/net/ovpn and include/uapi/linux/ovpn.h are
# forced to be added to the commit so that they can be included in the generated
# tarball.

name: Update Sources

on:
  push:
    branches:
      - main
      - development
      - net
      - development-net

jobs:
  update-sources:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Checkout Sources and Merge
        run: |
          # Determine the push branch (main or development)
          branch="${GITHUB_REF#refs/heads/}"

          # Determine the branch where the sources should be pushed
          # main -> sources
          # development -> development-sources
          # net -> net-sources
          # development-net -> development-net-sources
          if [ "$branch" = "main" ]; then
            target_branch="sources"
          else
            target_branch="${branch}-sources"
          fi

          git fetch origin "$target_branch" || true
          git checkout -b "$target_branch" "origin/$target_branch" 2>/dev/null || git checkout -b "$target_branch"

          # There should be no merge conflicts, but if there are, we want to
          # keep the changes from the non-sources branch
          git merge "origin/$branch" --no-commit --no-ff -X theirs || {
            git status --porcelain | grep "^DU " | cut -c4- | xargs -r git rm
            git status --porcelain | grep "^UD " | cut -c4- | xargs -r git add
            git status --porcelain | grep "^AA " | cut -c4- | xargs -r git checkout --theirs
            git status --porcelain | grep "^AA " | cut -c4- | xargs -r git add
          }

      - name: Generate Sources
        run: |
          chmod +x ./backports-ctl.sh
          ./backports-ctl.sh get-ovpn

      - name: Commit and Push Changes
        run: |
          # Don't commit changes to this file since it may cause problems when
          # pushing
          git restore --staged .github/workflows/update-source.yml || true
          git restore .github/workflows/update-source.yml || true

          # Ensure the .version contains the correct backports commit hash
          hash=$(echo "$GITHUB_SHA" | cut -c1-7)
          sed -i "s/backports_commit=.*/backports_commit=$hash/" ./.version

          # Retrieve the version variables
          source ./.version

          git add -f drivers/net/ovpn include/uapi/linux/ovpn.h tests/ovpn-cli .version
          git add .

          # Add a 2 digit monithonically increasing counter to allow multiple
          # tags per day. To do this, we need to find the last tag for the
          # current branch and date, and increment it by 1 starting from 00.
          current_date=$(date +%Y%m%d)
          suffix="$(git tag --sort=-creatordate | grep -E "^${tree}/${branch}-${kernel_version}-" | head -n1 | sed 's/.*-//')"
          tag_date=$(echo "$suffix" | cut -c1-8)
          counter=$(echo "$suffix" | cut -c9-10)
          if [ "$tag_date" != "$current_date" ] || [ -z "$counter" ] || [ "${#counter}" != 2 ]; then
            counter="00"
          else
            counter=$(printf "%02d" $((10#$counter + 1)))
          fi

          VERSION="${tree}/${branch}-${kernel_version}-${current_date}${counter}"
          git commit -m "Generated sources for ${VERSION}"
          git tag -f "${VERSION}"

          # Determine the correct branch to push to
          if [ "$branch" = "main" ]; then
            target_branch="sources"
          else
            target_branch="${branch}-sources"
          fi

          git push origin "$target_branch"
          git push origin --tags --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
