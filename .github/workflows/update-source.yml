# This GitHub Actions workflow is designed to automate the process of updating
# OVPN sources in the "sources" branch whenever there are changes pushed to the
# "main" branch. Files under drivers/net/ovpn and include/uapi/linux/ovpn.h are
# forced to be added to the commit so that they can be included in the generated
# tarball.

name: Update Sources

on:
  push:
    branches:
      - main
      - development

jobs:
  update-sources:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Checkout Sources and Merge with Main
        run: |
          # Determine the push branch (main or development)
          branch="${GITHUB_REF#refs/heads/}"

          # Set the target branch name based on the push branch.
          # For pushes on main, we use "sources"; for development, we use "development-sources"
          if [ "$branch" = "main" ]; then
            target_branch="sources"
          else
            target_branch="development-sources"
          fi

          git fetch origin "$target_branch" || true
          git checkout -b "$target_branch" "origin/$target_branch" 2>/dev/null || git checkout -b "$target_branch"

          # There should be no merge conflicts, but if there are, we want to
          # keep the changes from the main/development branch
          git merge "origin/$branch" --no-commit --no-ff -X theirs

      - name: Generate the new source files
        run: |
          chmod +x ./backports-ctl.sh
          ./backports-ctl.sh get-ovpn

      - name: Commit and Push Changes
        run: |
          git add -f drivers/net/ovpn include/uapi/linux/ovpn.h
          git add .

          # VERSION: $tree/$branch-$kernel_version-$date
          source ./.version
          # override branch otherwise it will be `sources`
          branch="${GITHUB_REF#refs/heads/}"
          VERSION="${tree}/${branch}-${kernel_version}-$(date +%Y%m%d)"
          git commit -m "Generated sources for ${VERSION}"
          git tag -f "${VERSION}"

          # Determine the correct branch to push to
          if [ "$branch" = "main" ]; then
            target_branch="sources"
          else
            target_branch="development-sources"
          fi

          git push origin "$target_branch"
          git push origin --tags --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
